#!/bin/bash

# WLAN Pi login banner
WLAN_PI_MODEL="WLAN Pi Community Edition"
if grep -q "Raspberry Pi Compute Module 4" /proc/cpuinfo ; then
    WLAN_PI_MODEL="WLAN Pi Pro"
fi
WLAN_PI_RELEASE=$(grep "VERSION" /etc/wlanpi-release | cut -d '"' -f 2 2>/dev/null)
echo
toilet -f wideterm --filter border:gay " $WLAN_PI_MODEL "

# Calculate uptime
UP_SECONDS=$(/usr/bin/cut -d "." -f1 /proc/uptime)
SECS=$((${UP_SECONDS}%60))
MINS=$((${UP_SECONDS}/60%60))
HRS=$((${UP_SECONDS}/3600%24))
DAYS=$((${UP_SECONDS}/86400))
UPTIME=$(printf "%d days, %d hrs %d mins %d secs" "$DAYS" "$HRS" "$MINS" "$SECS")

# Measure temperature
TEMP=$(vcgencmd measure_temp | awk -F "[=\']" '{print ($2-int($2)<0.499)?int($2):int($2)+1}')

# Memory utilisation
MEM_UTIL=$(free -m | awk 'NR==2 { printf "Total: %sMB, Used: %sMB, Free: %sMB",$2,$3,$4; }')

# Disk utilisation
DISK_UTIL=$(df -h ~ | awk 'NR==2 { printf "Total: %sB, Used: %sB, Free: %sB",$2,$3,$4; }')

# System load
LOAD=$(LC_ALL=C uptime)
LOAD=${LOAD#*'load average: '}
LOAD=${LOAD//','}
LOAD=$(echo $LOAD | cut -d " " -f 1)
[[ $LOAD == 0.0* ]] && LOAD=0.10
CPU_COUNT=$(grep -c processor /proc/cpuinfo)
LOAD=$(awk '{printf("%.0f",($1/$2) * 100)}' <<< "$LOAD $CPU_COUNT")

# WLAN Pi Mode
WLAN_PI_MODE=$(cat /etc/wlanpi-state)

# Display output
echo
echo "Mode:        ${WLAN_PI_MODE}"
echo "Release:     ${WLAN_PI_RELEASE}"
echo "Uptime:      ${UPTIME}"
echo "Date:        $(date)"
echo "Memory:      ${MEM_UTIL}"
echo "Disk:        ${DISK_UTIL}"
echo "CPU temp:    ${TEMP}Â°C"
echo "CPU load:    ${LOAD} %"
echo

#Display WLAN Pi tips
if [ -f /opt/wlanpi-common/motd-tips.txt ]; then
    echo "Tip:" $(shuf -n 1 /opt/wlanpi-common/motd-tips.txt)
    echo
fi
