#!/bin/bash

# Shows WLAN Pi Message Of The Day (MOTD) after user SSHs in

# Author: Jiri Brejcha, jirka@jiribrejcha.net, @jiribrejcha
# Any feedback is very welcome

# WLAN Pi model
MODEL=$(wlanpi-model | grep "Main board:" | cut -d ":" -f2 | xargs)
if [[ "$MODEL" == "WLAN Pi Pro" ]]; then
    WLAN_PI_MODEL="WLAN Pi Pro"
elif [[ "$MODEL" == "Raspberry Pi 4" ]]; then
    WLAN_PI_MODEL="WLAN Pi R4"
elif [[ "$MODEL" == "Mcuzone" ]]; then
    WLAN_PI_MODEL="WLAN Pi M4"
else
    WLAN_PI_MODEL="Unsupported hardware platform"
fi

# Release
WLAN_PI_RELEASE=$(grep "VERSION" /etc/wlanpi-release | cut -d '=' -f 2 2>/dev/null)
echo
toilet -f term --filter border:gay " $WLAN_PI_MODEL "

# Calculate uptime
UP_SECONDS=$(/usr/bin/cut -d "." -f1 /proc/uptime)
SECS=$((${UP_SECONDS}%60))
MINS=$((${UP_SECONDS}/60%60))
HRS=$((${UP_SECONDS}/3600%24))
DAYS=$((${UP_SECONDS}/86400))
UPTIME=$(printf "%d days, %d hrs %d mins %d secs" "$DAYS" "$HRS" "$MINS" "$SECS")

# Measure temperature
TEMP=$(vcgencmd measure_temp | awk -F "[=\']" '{print ($2-int($2)<0.499)?int($2):int($2)+1}')

# Memory utilisation
MEM_UTIL=$(free -m | awk 'NR==2 { printf "Total: %sMB, Used: %sMB, Free: %sMB",$2,$3,$4; }')

# Disk utilisation
DISK_UTIL=$(df -h ~ | awk 'NR==2 { printf "Total: %sB, Used: %sB, Free: %sB",$2,$3,$4; }')

# System load
LOAD=$(mpstat -o JSON | jq '(100-(.sysstat.hosts[0].statistics[0]."cpu-load"[0].idle))')
LOAD=$(echo "($LOAD+0.5)/1" | bc)

# WLAN Pi Mode
WLAN_PI_MODE=$(cat /etc/wlanpi-state)

#Internet connectivity check
INTERNET="Unreachable"
if timeout 2 curl -s -L www.google.com | grep "google.com" &>/dev/null; then
    INTERNET="Reachable"
fi

# Display output
echo "Mode:        ${WLAN_PI_MODE}"
echo "Release:     ${WLAN_PI_RELEASE}"
echo "Uptime:      ${UPTIME}"
echo "Date:        $(date)"
echo "Memory:      ${MEM_UTIL}"
echo "Disk:        ${DISK_UTIL}"
echo "CPU temp:    ${TEMP}Â°C"
echo "CPU load:    ${LOAD} %"
echo "Internet:    ${INTERNET}"
echo

# Display network interfaces and IP addresses
INTERFACES=('eth0' 'wlan0' 'pan0' 'usb0' 'eth1' 'wlan1')
echo "Network interfaces:"
for INT in ${INTERFACES[*]}; do
    IP=$(ifconfig | grep -A1 $INT | grep inet | awk '{print $2}')
    if [ ! -z ${IP} ]; then
        echo "  $INT  $IP"
    fi
done
echo

# Display WLAN Pi tips
if [ -f /opt/wlanpi-common/motd-tips.txt ]; then
    echo " Tip " | toilet -f term --filter border:gay
    echo "$(shuf -n 1 /opt/wlanpi-common/motd-tips.txt)"
    echo
fi

# MediaTek 7612U Wi-Fi adapter does not work in top USB 3.0 port on RPi4. Warn the user.
if [ -f /sys/bus/usb/devices/2-1/idProduct ]; then
    if grep -q "Raspberry Pi 4 Model B" /proc/cpuinfo && grep -q "7612" /sys/bus/usb/devices/2-1/idProduct; then
        echo " Error: Connect Wi-Fi adapter to different USB port " | toilet -f term --filter border:metal
        echo "MediaTek 7612U Wi-Fi adapter is not supported in the top USB 3.0 port. Use the bottom USB 3.0 port or any USB 2.0 port instead."
        echo
    fi
fi

# No RF regulatory domain configured
if sudo wlanpi-reg-domain get | grep -q "No reg domain configured"; then
    echo " Warning: No RF regulatory domain has been configured " | toilet -f term --filter border:metal
    echo "Configure one using \"sudo wlanpi-reg-domain set XX\", followed by \"sudo reboot\". XX represents the country code."
    echo
fi